from fastapi import APIRouter, UploadFile, File, HTTPException
from fastapi.responses import JSONResponse
import PyPDF2
import io
from openai import OpenAI
import os
from dotenv import load_dotenv

load_dotenv()

router = APIRouter()
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

# –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—é–º–µ –ø–æ –º–µ—Ç–æ–¥–∏–∫–µ STAR
STAR_PROMPT = """–ü—Ä–æ–≤–µ–¥–∏ –∫—Ä–∞—Ç–∫–∏–π –∏ —Ç–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—é–º–µ, —Å–ª–µ–¥—É—è —Å—Ç—Ä—É–∫—Ç—É—Ä–µ:

1Ô∏è‚É£ –ü–†–û–§–ò–õ–¨ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
‚Ä¢ –†–æ–ª—å –∏ —É—Ä–æ–≤–µ–Ω—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
‚Ä¢ –ö–ª—é—á–µ–≤–∞—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞
‚Ä¢ –û–±—â–∏–π –æ–ø—ã—Ç –≤ –≥–æ–¥–∞—Ö

2Ô∏è‚É£ –¢–û–ü-3 –î–û–°–¢–ò–ñ–ï–ù–ò–Ø
–î–ª—è –∫–∞–∂–¥–æ–≥–æ:
[S] –ö–æ–Ω—Ç–µ–∫—Å—Ç: –±–∏–∑–Ω–µ—Å-–∑–∞–¥–∞—á–∞ (1 —Å—Ç—Ä–æ–∫–∞)
[T] –¶–µ–ª—å: –∏–∑–º–µ—Ä–∏–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (1 —Å—Ç—Ä–æ–∫–∞)
[A] –î–µ–π—Å—Ç–≤–∏—è: –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏ (2-3 –ø—É–Ω–∫—Ç–∞)
[R] –†–µ–∑—É–ª—å—Ç–∞—Ç: —á–∏—Å–ª–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏ (1-2 —Å—Ç—Ä–æ–∫–∏)

3Ô∏è‚É£ –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ô –°–¢–ï–ö
‚Ä¢ Hard skills: –∫–ª—é—á–µ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ —É—Ä–æ–≤–µ–Ω—å –≤–ª–∞–¥–µ–Ω–∏—è
‚Ä¢ Soft skills: 2-3 –≥–ª–∞–≤–Ω—ã–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏
‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏/–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ (–µ—Å–ª–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ)

4Ô∏è‚É£ –≠–ö–°–ü–ï–†–¢–ù–ê–Ø –û–¶–ï–ù–ö–ê
‚Ä¢ üü¢ –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã (3 –ø—É–Ω–∫—Ç–∞)
‚Ä¢ üî¥ –ó–æ–Ω—ã —Ä–æ—Å—Ç–∞ (2 –ø—É–Ω–∫—Ç–∞)
‚Ä¢ ‚≠ê –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (2-3 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —à–∞–≥–∞)

–í–∞–∂–Ω–æ:
- –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç—ã –∏–∑ —Ä–µ–∑—é–º–µ
- –ü–∏—à–∏ –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ —Å—É—â–µ—Å—Ç–≤—É
- –í—ã–¥–µ–ª—è–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
- –ò–∑–±–µ–≥–∞–π –æ–±—â–∏—Ö —Ñ—Ä–∞–∑
- –§–æ—Ä–º–∞—Ç–∏—Ä—É–π —Ç–µ–∫—Å—Ç –¥–ª—è –ª–µ–≥–∫–æ–≥–æ —á—Ç–µ–Ω–∏—è"""

@router.post("/api/resume-analysis")
async def analyze_resume(resume: UploadFile = File(...)):
    if not resume.filename.endswith('.pdf'):
        raise HTTPException(status_code=400, detail="–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ PDF —Ñ–∞–π–ª—ã")
    
    try:
        # –ß—Ç–µ–Ω–∏–µ PDF —Ñ–∞–π–ª–∞
        contents = await resume.read()
        pdf_file = io.BytesIO(contents)
        pdf_reader = PyPDF2.PdfReader(pdf_file)
        
        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ PDF
        text = ""
        for page in pdf_reader.pages:
            text += page.extract_text()
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—É—é –º–æ–¥–µ–ª—å GPT-3.5-turbo-1106
        response = client.chat.completions.create(
            model="gpt-3.5-turbo-1106",
            messages=[
                {"role": "system", "content": STAR_PROMPT},
                {"role": "user", "content": text}
            ],
            temperature=0.3,
            max_tokens=1200,
            presence_penalty=0.1,
            frequency_penalty=0.2
        )
        
        analysis = response.choices[0].message.content
        
        return JSONResponse(content={"analysis": analysis})
    
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ä–µ–∑—é–º–µ: {str(e)}") 